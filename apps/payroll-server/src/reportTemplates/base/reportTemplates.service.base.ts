/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ReportTemplates as PrismaReportTemplates,
} from "@prisma/client";

export class ReportTemplatesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReportTemplatesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.reportTemplates.count(args);
  }

  async reportTemplatesItems(
    args: Prisma.ReportTemplatesFindManyArgs
  ): Promise<PrismaReportTemplates[]> {
    return this.prisma.reportTemplates.findMany(args);
  }
  async reportTemplates(
    args: Prisma.ReportTemplatesFindUniqueArgs
  ): Promise<PrismaReportTemplates | null> {
    return this.prisma.reportTemplates.findUnique(args);
  }
  async createReportTemplates(
    args: Prisma.ReportTemplatesCreateArgs
  ): Promise<PrismaReportTemplates> {
    return this.prisma.reportTemplates.create(args);
  }
  async updateReportTemplates(
    args: Prisma.ReportTemplatesUpdateArgs
  ): Promise<PrismaReportTemplates> {
    return this.prisma.reportTemplates.update(args);
  }
  async deleteReportTemplates(
    args: Prisma.ReportTemplatesDeleteArgs
  ): Promise<PrismaReportTemplates> {
    return this.prisma.reportTemplates.delete(args);
  }
}
