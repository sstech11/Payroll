/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RazorPayXIntegration as PrismaRazorPayXIntegration,
} from "@prisma/client";

export class RazorPayXIntegrationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RazorPayXIntegrationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.razorPayXIntegration.count(args);
  }

  async razorPayXIntegrations(
    args: Prisma.RazorPayXIntegrationFindManyArgs
  ): Promise<PrismaRazorPayXIntegration[]> {
    return this.prisma.razorPayXIntegration.findMany(args);
  }
  async razorPayXIntegration(
    args: Prisma.RazorPayXIntegrationFindUniqueArgs
  ): Promise<PrismaRazorPayXIntegration | null> {
    return this.prisma.razorPayXIntegration.findUnique(args);
  }
  async createRazorPayXIntegration(
    args: Prisma.RazorPayXIntegrationCreateArgs
  ): Promise<PrismaRazorPayXIntegration> {
    return this.prisma.razorPayXIntegration.create(args);
  }
  async updateRazorPayXIntegration(
    args: Prisma.RazorPayXIntegrationUpdateArgs
  ): Promise<PrismaRazorPayXIntegration> {
    return this.prisma.razorPayXIntegration.update(args);
  }
  async deleteRazorPayXIntegration(
    args: Prisma.RazorPayXIntegrationDeleteArgs
  ): Promise<PrismaRazorPayXIntegration> {
    return this.prisma.razorPayXIntegration.delete(args);
  }
}
