/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PreventiveMaintenance as PrismaPreventiveMaintenance,
} from "@prisma/client";

export class PreventiveMaintenanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PreventiveMaintenanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.preventiveMaintenance.count(args);
  }

  async preventiveMaintenances(
    args: Prisma.PreventiveMaintenanceFindManyArgs
  ): Promise<PrismaPreventiveMaintenance[]> {
    return this.prisma.preventiveMaintenance.findMany(args);
  }
  async preventiveMaintenance(
    args: Prisma.PreventiveMaintenanceFindUniqueArgs
  ): Promise<PrismaPreventiveMaintenance | null> {
    return this.prisma.preventiveMaintenance.findUnique(args);
  }
  async createPreventiveMaintenance(
    args: Prisma.PreventiveMaintenanceCreateArgs
  ): Promise<PrismaPreventiveMaintenance> {
    return this.prisma.preventiveMaintenance.create(args);
  }
  async updatePreventiveMaintenance(
    args: Prisma.PreventiveMaintenanceUpdateArgs
  ): Promise<PrismaPreventiveMaintenance> {
    return this.prisma.preventiveMaintenance.update(args);
  }
  async deletePreventiveMaintenance(
    args: Prisma.PreventiveMaintenanceDeleteArgs
  ): Promise<PrismaPreventiveMaintenance> {
    return this.prisma.preventiveMaintenance.delete(args);
  }
}
