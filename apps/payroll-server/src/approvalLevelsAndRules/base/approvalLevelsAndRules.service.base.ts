/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ApprovalLevelsAndRules as PrismaApprovalLevelsAndRules,
} from "@prisma/client";

export class ApprovalLevelsAndRulesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ApprovalLevelsAndRulesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.approvalLevelsAndRules.count(args);
  }

  async approvalLevelsAndRulesItems(
    args: Prisma.ApprovalLevelsAndRulesFindManyArgs
  ): Promise<PrismaApprovalLevelsAndRules[]> {
    return this.prisma.approvalLevelsAndRules.findMany(args);
  }
  async approvalLevelsAndRules(
    args: Prisma.ApprovalLevelsAndRulesFindUniqueArgs
  ): Promise<PrismaApprovalLevelsAndRules | null> {
    return this.prisma.approvalLevelsAndRules.findUnique(args);
  }
  async createApprovalLevelsAndRules(
    args: Prisma.ApprovalLevelsAndRulesCreateArgs
  ): Promise<PrismaApprovalLevelsAndRules> {
    return this.prisma.approvalLevelsAndRules.create(args);
  }
  async updateApprovalLevelsAndRules(
    args: Prisma.ApprovalLevelsAndRulesUpdateArgs
  ): Promise<PrismaApprovalLevelsAndRules> {
    return this.prisma.approvalLevelsAndRules.update(args);
  }
  async deleteApprovalLevelsAndRules(
    args: Prisma.ApprovalLevelsAndRulesDeleteArgs
  ): Promise<PrismaApprovalLevelsAndRules> {
    return this.prisma.approvalLevelsAndRules.delete(args);
  }
}
