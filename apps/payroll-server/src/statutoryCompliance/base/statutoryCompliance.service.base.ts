/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StatutoryCompliance as PrismaStatutoryCompliance,
} from "@prisma/client";

export class StatutoryComplianceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StatutoryComplianceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.statutoryCompliance.count(args);
  }

  async statutoryCompliances(
    args: Prisma.StatutoryComplianceFindManyArgs
  ): Promise<PrismaStatutoryCompliance[]> {
    return this.prisma.statutoryCompliance.findMany(args);
  }
  async statutoryCompliance(
    args: Prisma.StatutoryComplianceFindUniqueArgs
  ): Promise<PrismaStatutoryCompliance | null> {
    return this.prisma.statutoryCompliance.findUnique(args);
  }
  async createStatutoryCompliance(
    args: Prisma.StatutoryComplianceCreateArgs
  ): Promise<PrismaStatutoryCompliance> {
    return this.prisma.statutoryCompliance.create(args);
  }
  async updateStatutoryCompliance(
    args: Prisma.StatutoryComplianceUpdateArgs
  ): Promise<PrismaStatutoryCompliance> {
    return this.prisma.statutoryCompliance.update(args);
  }
  async deleteStatutoryCompliance(
    args: Prisma.StatutoryComplianceDeleteArgs
  ): Promise<PrismaStatutoryCompliance> {
    return this.prisma.statutoryCompliance.delete(args);
  }
}
