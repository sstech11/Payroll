/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  WarrantyPeriods as PrismaWarrantyPeriods,
} from "@prisma/client";

export class WarrantyPeriodsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WarrantyPeriodsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.warrantyPeriods.count(args);
  }

  async warrantyPeriodsItems(
    args: Prisma.WarrantyPeriodsFindManyArgs
  ): Promise<PrismaWarrantyPeriods[]> {
    return this.prisma.warrantyPeriods.findMany(args);
  }
  async warrantyPeriods(
    args: Prisma.WarrantyPeriodsFindUniqueArgs
  ): Promise<PrismaWarrantyPeriods | null> {
    return this.prisma.warrantyPeriods.findUnique(args);
  }
  async createWarrantyPeriods(
    args: Prisma.WarrantyPeriodsCreateArgs
  ): Promise<PrismaWarrantyPeriods> {
    return this.prisma.warrantyPeriods.create(args);
  }
  async updateWarrantyPeriods(
    args: Prisma.WarrantyPeriodsUpdateArgs
  ): Promise<PrismaWarrantyPeriods> {
    return this.prisma.warrantyPeriods.update(args);
  }
  async deleteWarrantyPeriods(
    args: Prisma.WarrantyPeriodsDeleteArgs
  ): Promise<PrismaWarrantyPeriods> {
    return this.prisma.warrantyPeriods.delete(args);
  }
}
