/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ApprovalHierarchies as PrismaApprovalHierarchies,
} from "@prisma/client";

export class ApprovalHierarchiesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ApprovalHierarchiesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.approvalHierarchies.count(args);
  }

  async approvalHierarchiesItems(
    args: Prisma.ApprovalHierarchiesFindManyArgs
  ): Promise<PrismaApprovalHierarchies[]> {
    return this.prisma.approvalHierarchies.findMany(args);
  }
  async approvalHierarchies(
    args: Prisma.ApprovalHierarchiesFindUniqueArgs
  ): Promise<PrismaApprovalHierarchies | null> {
    return this.prisma.approvalHierarchies.findUnique(args);
  }
  async createApprovalHierarchies(
    args: Prisma.ApprovalHierarchiesCreateArgs
  ): Promise<PrismaApprovalHierarchies> {
    return this.prisma.approvalHierarchies.create(args);
  }
  async updateApprovalHierarchies(
    args: Prisma.ApprovalHierarchiesUpdateArgs
  ): Promise<PrismaApprovalHierarchies> {
    return this.prisma.approvalHierarchies.update(args);
  }
  async deleteApprovalHierarchies(
    args: Prisma.ApprovalHierarchiesDeleteArgs
  ): Promise<PrismaApprovalHierarchies> {
    return this.prisma.approvalHierarchies.delete(args);
  }
}
